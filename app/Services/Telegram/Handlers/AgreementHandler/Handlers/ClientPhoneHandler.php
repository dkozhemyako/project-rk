<?php

namespace App\Services\Telegram\Handlers\AgreementHandler\Handlers;

use App\Enums\TypeClientEnum;
use App\Services\Telegram\Handlers\AgreementHandler\AgreementInterface;
use App\Services\Telegram\Handlers\AgreementHandler\DTO\AgreementDTO;
use Closure;
use Illuminate\Support\Facades\Redis;

class ClientPhoneHandler implements AgreementInterface
{
    public const AGR_STAGE_CLIENT_PHONE = '_CLIENT_PHONE';


    public function handle(AgreementDTO $agreementDTO, Closure $next): AgreementDTO
    {
        $key = $agreementDTO->getSenderId() . self::AGR_STAGE_CLIENT_PHONE;

        $availablePhoneCodes = [
            '39',
            '50',
            '63',
            '66',
            '67',
            '68',
            '73',
            '89',
            '91',
            '92',
            '93',
            '94',
            '95',
            '96',
            '97',
            '98',
            '99',
        ];

        if (Redis::exists($key) == true){
            return $next($agreementDTO);
        }

        if (in_array(str_split($agreementDTO->getMessage())[1] . str_split($agreementDTO->getMessage())[2], $availablePhoneCodes, true) === false){
            $agreementDTO->setMessage('ü§¶ –¢–∞–∫–æ–≥–æ –∫–æ–¥—É0636964239 –º–æ–±—ñ–ª—å–Ω–æ—ó –º–µ—Ä–µ–∂—ñ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –∑–∞ –∂–æ–¥–Ω–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º. –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É.');
            return $agreementDTO;
        }

        if(strlen($agreementDTO->getMessage()) != 10){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ 10 —á–∏—Å–µ–ª –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 0631112233');
            return $agreementDTO;
        }

        if (is_numeric($agreementDTO->getMessage()) === false){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–≤–∏–Ω–µ–Ω —Å–∫–ª–∞–¥–∞—Ç–∏—Å—å –≤–∏–∫–ª—é—á–Ω–æ –∑ —á–∏—Å–µ–ª, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ 10 —á–∏—Å–µ–ª –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 0631112233');
            return $agreementDTO;
        }

        if (str_split($agreementDTO->getMessage())[0] != 0){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ 10 —á–∏—Å–µ–ª –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 0631112233');
            return $agreementDTO;
        }

        if (str_split($agreementDTO->getMessage())[1] == 0 || str_split($agreementDTO->getMessage())[2] == 0){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ 10 —á–∏—Å–µ–ª –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0, –¥—Ä—É–≥–µ —ñ —Ç—Ä–µ—Ç—î —á–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω—É–ª–µ–º, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 0631112233');
            return $agreementDTO;
        }

        Redis::set($key, (int)$agreementDTO->getMessage(), 'EX', 260000);

        if ($agreementDTO->getClientAgreementDTO()->getType() === TypeClientEnum::FOP){
            $agreementDTO->setMessage('üí¨ –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å—É –≤ –Ñ–î–† , –º–∞—î –±—É—Ç–∏ 19 —Å–∏–º–≤–æ–ª—ñ–≤');
            return $agreementDTO;
        }

        if ($agreementDTO->getClientAgreementDTO()->getType() === TypeClientEnum::FO){
            $agreementDTO->setMessage('üí¨ –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–∞ —Å–µ—Ä—ñ—é –ø–∞—Å–ø–æ—Ä—Ç—É –æ–¥–Ω—ñ—î—é —Å—Ç—Ä—ñ—á–∫–æ—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ –ù–ú112233. –Ø–∫—â–æ —É –≤–∞—Å ID –∫–∞—Ä—Ç–∫–∞ –≤–∫–∞–∂—ñ—Ç —ó—ó –Ω–æ–º–µ—Ä.');
            return $agreementDTO;
        }

    }
}
