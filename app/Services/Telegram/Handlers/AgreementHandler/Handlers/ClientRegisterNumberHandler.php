<?php

namespace App\Services\Telegram\Handlers\AgreementHandler\Handlers;

use App\Services\Telegram\Handlers\AgreementHandler\AgreementInterface;
use App\Services\Telegram\Handlers\AgreementHandler\DTO\AgreementDTO;
use App\Services\Telegram\Handlers\AgreementHandler\DTO\ClientInfoDTO;
use Closure;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Redis;

class ClientRegisterNumberHandler implements AgreementInterface
{
    public const AGR_STAGE_CLIENT_REG_NUMBER = '_CLIENT_REG_NUMBER';


    public function handle(AgreementDTO $agreementDTO, Closure $next): AgreementDTO
    {
        $key = $agreementDTO->getSenderId() . self::AGR_STAGE_CLIENT_REG_NUMBER;

        if (Redis::exists($key) == true){

            $agreementDTO->getClientAgreementDTO()->setName(Redis::get($agreementDTO->getSenderId() . ClientNameHandler::AGR_STAGE_CLIENT_NAME));
            $agreementDTO->getClientAgreementDTO()->setPhone(Redis::get($agreementDTO->getSenderId() . ClientPhoneHandler::AGR_STAGE_CLIENT_PHONE));
            $agreementDTO->getClientAgreementDTO()->setClientInn(Redis::get($agreementDTO->getSenderId() . self::AGR_STAGE_CLIENT_REG_NUMBER));

            return $next($agreementDTO);
        }

        if(mb_strlen($agreementDTO->getMessage()) != 10){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä –Ü–ü–ù –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–æ–º–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ 10 —á–∏—Å–µ–ª. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –Ü–ù–ù –ø–æ–≤—Ç–æ—Ä–Ω–æ.');
            return $agreementDTO;
        }

        if (is_numeric($agreementDTO->getMessage()) === false){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä –Ü–ü–ù –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–æ–º–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω —Å–∫–ª–∞–¥–∞—Ç–∏—Å—å –≤–∏–∫–ª—é—á–Ω–æ –∑ 10 —á–∏—Å–µ–ª. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –Ü–ü–ù –ø–æ–≤—Ç–æ—Ä–Ω–æ.');
            return $agreementDTO;
        }

        foreach (str_split($agreementDTO->getMessage()) as $value){
            if ($value < 0){
                $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä –Ü–ü–ù –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–æ–º–µ—Ä –Ω–µ –º–æ–∂–µ –º–∞—Ç–∏ –≤—ñ–¥—î–º–Ω–∏—Ö —á–∏—Å–µ–ª. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –Ü–ù–ù –ø–æ–≤—Ç–æ—Ä–Ω–æ. –ü–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ 10 —á–∏—Å–µ–ª, –∂–æ–¥–Ω–µ –∑ –Ω–∏—Ö –Ω–µ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –≤—ñ–¥—î–º–Ω–∏–º.');
                return $agreementDTO;
            }
        }

        if ($agreementDTO->getMessage() * 1 === 0){
            $agreementDTO->setMessage('ü§¶ –ù–æ–º–µ—Ä –Ü–ü–ù –≤–∫–∞–∑–∞–Ω–æ –Ω–µ –≤—ñ—Ä–Ω–æ, –Ω–æ–º–µ—Ä –Ω–µ –º–æ–∂–µ —Å–∫–ª–∞–¥–∞—Ç–∏—Å—å –∑ –æ–¥–Ω–∏—Ö –Ω—É–ª—ñ–≤. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –Ü–ü–ù –ø–æ–≤—Ç–æ—Ä–Ω–æ. –ü–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ 10 —á–∏—Å–µ–ª, –∫–æ–∂–Ω–µ –∑ —è–∫–∏—Ö –ø–æ–≤–∏–Ω–Ω–æ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ –∞–±–æ –±—É—Ç–∏ –±—ñ–ª—å—à–µ 0');
            return $agreementDTO;
        }

        Redis::set($key, $agreementDTO->getMessage(), 'EX', 260000);
        $agreementDTO->setMessage(
            'üí¨ –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –æ–±–ª–∞—Å—Ç—ñ –≤–∞—à–æ—ó –ø—Ä–æ–ø–∏—Å–∫–∏.'
        );
        return $agreementDTO;
    }
}
