<?php

namespace App\Services\Telegram\Handlers\AgreementHandler\Handlers;

use App\Services\Telegram\Handlers\AgreementHandler\AgreementInterface;
use App\Services\Telegram\Handlers\AgreementHandler\DTO\AgreementDTO;
use Closure;
use Illuminate\Support\Facades\Redis;

class ClientAddressHouseHandler implements AgreementInterface
{
    public const AGR_STAGE_CLIENT_HOUSE = '_CLIENT_HOUSE';


    public function handle(AgreementDTO $agreementDTO, Closure $next): AgreementDTO
    {
        $key = $agreementDTO->getSenderId() . self::AGR_STAGE_CLIENT_HOUSE;

        if (Redis::exists($key) == true){
            return $next($agreementDTO);
        }

        if (is_numeric(str_split($agreementDTO->getMessage())[0]) === false || str_split($agreementDTO->getMessage())[0] == 0){
            $agreementDTO->setMessage(
                'ü§¶ –ü–æ–º–∏–ª–∫–∞ –≤–≤–æ–¥—É. –ù–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—å –∑ —á–∏—Å–ª–∞ –∞–ª–µ –Ω–µ –∑ –Ω—É–ª—è, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 14–≤. –ë—É–¥—å –ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.'
            );
            return $agreementDTO;
        }

        Redis::set($key, $agreementDTO->getMessage(), 'EX', 260000);
        $agreementDTO->setMessage(
            'üí¨ –í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä–∏ –≤–∞—à–æ—ó –ø—Ä–æ–ø–∏—Å–∫–∏, —è–∫—â–æ –±—É–¥–∏–Ω–æ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π, –≤–∫–∞–∂—ñ—Ç—å 0.'
        );
        return $agreementDTO;
    }
}
