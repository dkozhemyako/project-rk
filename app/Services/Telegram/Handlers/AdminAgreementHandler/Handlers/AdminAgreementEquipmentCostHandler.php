<?php

namespace App\Services\Telegram\Handlers\AdminAgreementHandler\Handlers;



use App\Enums\EquipmentConditionEnum;
use App\Services\Telegram\Handlers\AdminAgreementHandler\AdminAgreementInterface;
use App\Services\Telegram\Handlers\AdminAgreementHandler\DTO\AdminAgreementDTO;
use Closure;
use Illuminate\Support\Facades\Redis;

class AdminAgreementEquipmentCostHandler implements AdminAgreementInterface
{
    public const AGR_EQUIP_COST_ADMIN = '_ADMIN_EQUIP_COST';


    public function handle(AdminAgreementDTO $adminAgreementDTO, Closure $next): AdminAgreementDTO
    {
        $key = $adminAgreementDTO->getSenderId() . self::AGR_EQUIP_COST_ADMIN;

        if (Redis::exists($key) == true){

            $adminAgreementDTO->setEquipmentCost(Redis::get($key));

            return $next($adminAgreementDTO);
        }

        if(is_numeric($adminAgreementDTO->getMessage()) === false){
            $adminAgreementDTO->setMessage(
                'ü§¶ –ü–æ–º–∏–ª–∫–∞ –≤–≤–æ–¥—É. –í–∞—Ä—Ç—ñ—Å—Ç—å –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 10000. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è.'
            );

            return $adminAgreementDTO;
        }

        foreach (str_split($adminAgreementDTO->getMessage()) as $value){
            if ($value < 0){
                $adminAgreementDTO->setMessage('ü§¶ –ü–æ–º–∏–ª–∫–∞ –≤–≤–æ–¥—É. –í–∞—Ä—Ç—ñ—Å—Ç—å –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ —á–∏—Å–ª–æ–º, —á–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥—î–º–Ω–∏–º, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 10000. –ë—É–¥—å–ª–∞—Å–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è.');
                return $adminAgreementDTO;
            }
        }

        Redis::set($key, $adminAgreementDTO->getMessage(), 'EX', 260000);

        $adminAgreementDTO->setMessage(
            '–í–∫–∞–∂—ñ—Ç—å –≤–∞—Ä—Ç—ñ—Å—Ç—å –æ—Ä–µ–Ω–¥–∏ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è (—Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 1000)'
        );

        return $adminAgreementDTO;
    }
}
